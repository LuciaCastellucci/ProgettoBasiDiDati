#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StreaminVideoApplication
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StreamingVideo")]
	public partial class DataClassesStreamingVideoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertABBONAMENTO(ABBONAMENTO instance);
    partial void UpdateABBONAMENTO(ABBONAMENTO instance);
    partial void DeleteABBONAMENTO(ABBONAMENTO instance);
    partial void InsertVISIONE(VISIONE instance);
    partial void UpdateVISIONE(VISIONE instance);
    partial void DeleteVISIONE(VISIONE instance);
    partial void InsertACCOUNT(ACCOUNT instance);
    partial void UpdateACCOUNT(ACCOUNT instance);
    partial void DeleteACCOUNT(ACCOUNT instance);
    partial void Insertappartenere_ep(appartenere_ep instance);
    partial void Updateappartenere_ep(appartenere_ep instance);
    partial void Deleteappartenere_ep(appartenere_ep instance);
    partial void Insertappartenere_film(appartenere_film instance);
    partial void Updateappartenere_film(appartenere_film instance);
    partial void Deleteappartenere_film(appartenere_film instance);
    partial void InsertCASA_PRODUTTRICE(CASA_PRODUTTRICE instance);
    partial void UpdateCASA_PRODUTTRICE(CASA_PRODUTTRICE instance);
    partial void DeleteCASA_PRODUTTRICE(CASA_PRODUTTRICE instance);
    partial void InsertCAST(CAST instance);
    partial void UpdateCAST(CAST instance);
    partial void DeleteCAST(CAST instance);
    partial void Insertdistribuire_ep(distribuire_ep instance);
    partial void Updatedistribuire_ep(distribuire_ep instance);
    partial void Deletedistribuire_ep(distribuire_ep instance);
    partial void Insertdistribuire_film(distribuire_film instance);
    partial void Updatedistribuire_film(distribuire_film instance);
    partial void Deletedistribuire_film(distribuire_film instance);
    partial void InsertEPISODIO(EPISODIO instance);
    partial void UpdateEPISODIO(EPISODIO instance);
    partial void DeleteEPISODIO(EPISODIO instance);
    partial void InsertFILM(FILM instance);
    partial void UpdateFILM(FILM instance);
    partial void DeleteFILM(FILM instance);
    partial void InsertGENERE(GENERE instance);
    partial void UpdateGENERE(GENERE instance);
    partial void DeleteGENERE(GENERE instance);
    partial void InsertLINGUA(LINGUA instance);
    partial void UpdateLINGUA(LINGUA instance);
    partial void DeleteLINGUA(LINGUA instance);
    partial void InsertPAGAMENTO(PAGAMENTO instance);
    partial void UpdatePAGAMENTO(PAGAMENTO instance);
    partial void DeletePAGAMENTO(PAGAMENTO instance);
    partial void Insertpartecipare_ep(partecipare_ep instance);
    partial void Updatepartecipare_ep(partecipare_ep instance);
    partial void Deletepartecipare_ep(partecipare_ep instance);
    partial void Insertpartecipare_film(partecipare_film instance);
    partial void Updatepartecipare_film(partecipare_film instance);
    partial void Deletepartecipare_film(partecipare_film instance);
    partial void Insertprodurre_ep(produrre_ep instance);
    partial void Updateprodurre_ep(produrre_ep instance);
    partial void Deleteprodurre_ep(produrre_ep instance);
    partial void Insertprodurre_film(produrre_film instance);
    partial void Updateprodurre_film(produrre_film instance);
    partial void Deleteprodurre_film(produrre_film instance);
    partial void InsertSERIE(SERIE instance);
    partial void UpdateSERIE(SERIE instance);
    partial void DeleteSERIE(SERIE instance);
    partial void InsertSTAGIONE(STAGIONE instance);
    partial void UpdateSTAGIONE(STAGIONE instance);
    partial void DeleteSTAGIONE(STAGIONE instance);
    partial void InsertTITOLARE_ACCOUNT(TITOLARE_ACCOUNT instance);
    partial void UpdateTITOLARE_ACCOUNT(TITOLARE_ACCOUNT instance);
    partial void DeleteTITOLARE_ACCOUNT(TITOLARE_ACCOUNT instance);
    partial void InsertUTENTE(UTENTE instance);
    partial void UpdateUTENTE(UTENTE instance);
    partial void DeleteUTENTE(UTENTE instance);
    #endregion
		
		public DataClassesStreamingVideoDataContext() : 
				base(global::StreaminVideoApplication.Properties.Settings.Default.StreamingVideoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesStreamingVideoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesStreamingVideoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesStreamingVideoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesStreamingVideoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ABBONAMENTO> ABBONAMENTOs
		{
			get
			{
				return this.GetTable<ABBONAMENTO>();
			}
		}
		
		public System.Data.Linq.Table<VISIONE> VISIONEs
		{
			get
			{
				return this.GetTable<VISIONE>();
			}
		}
		
		public System.Data.Linq.Table<ACCOUNT> ACCOUNTs
		{
			get
			{
				return this.GetTable<ACCOUNT>();
			}
		}
		
		public System.Data.Linq.Table<appartenere_ep> appartenere_eps
		{
			get
			{
				return this.GetTable<appartenere_ep>();
			}
		}
		
		public System.Data.Linq.Table<appartenere_film> appartenere_films
		{
			get
			{
				return this.GetTable<appartenere_film>();
			}
		}
		
		public System.Data.Linq.Table<CASA_PRODUTTRICE> CASA_PRODUTTRICEs
		{
			get
			{
				return this.GetTable<CASA_PRODUTTRICE>();
			}
		}
		
		public System.Data.Linq.Table<CAST> CASTs
		{
			get
			{
				return this.GetTable<CAST>();
			}
		}
		
		public System.Data.Linq.Table<distribuire_ep> distribuire_eps
		{
			get
			{
				return this.GetTable<distribuire_ep>();
			}
		}
		
		public System.Data.Linq.Table<distribuire_film> distribuire_films
		{
			get
			{
				return this.GetTable<distribuire_film>();
			}
		}
		
		public System.Data.Linq.Table<EPISODIO> EPISODIOs
		{
			get
			{
				return this.GetTable<EPISODIO>();
			}
		}
		
		public System.Data.Linq.Table<FILM> FILMs
		{
			get
			{
				return this.GetTable<FILM>();
			}
		}
		
		public System.Data.Linq.Table<GENERE> GENEREs
		{
			get
			{
				return this.GetTable<GENERE>();
			}
		}
		
		public System.Data.Linq.Table<LINGUA> LINGUAs
		{
			get
			{
				return this.GetTable<LINGUA>();
			}
		}
		
		public System.Data.Linq.Table<PAGAMENTO> PAGAMENTOs
		{
			get
			{
				return this.GetTable<PAGAMENTO>();
			}
		}
		
		public System.Data.Linq.Table<partecipare_ep> partecipare_eps
		{
			get
			{
				return this.GetTable<partecipare_ep>();
			}
		}
		
		public System.Data.Linq.Table<partecipare_film> partecipare_films
		{
			get
			{
				return this.GetTable<partecipare_film>();
			}
		}
		
		public System.Data.Linq.Table<produrre_ep> produrre_eps
		{
			get
			{
				return this.GetTable<produrre_ep>();
			}
		}
		
		public System.Data.Linq.Table<produrre_film> produrre_films
		{
			get
			{
				return this.GetTable<produrre_film>();
			}
		}
		
		public System.Data.Linq.Table<SERIE> SERIEs
		{
			get
			{
				return this.GetTable<SERIE>();
			}
		}
		
		public System.Data.Linq.Table<STAGIONE> STAGIONEs
		{
			get
			{
				return this.GetTable<STAGIONE>();
			}
		}
		
		public System.Data.Linq.Table<TITOLARE_ACCOUNT> TITOLARE_ACCOUNTs
		{
			get
			{
				return this.GetTable<TITOLARE_ACCOUNT>();
			}
		}
		
		public System.Data.Linq.Table<UTENTE> UTENTEs
		{
			get
			{
				return this.GetTable<UTENTE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ABBONAMENTO")]
	public partial class ABBONAMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codAbbonamento;
		
		private System.DateTime _dataInizio;
		
		private double _prezzo;
		
		private string _CF;
		
		private EntitySet<PAGAMENTO> _PAGAMENTOs;
		
		private EntityRef<TITOLARE_ACCOUNT> _TITOLARE_ACCOUNT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodAbbonamentoChanging(string value);
    partial void OncodAbbonamentoChanged();
    partial void OndataInizioChanging(System.DateTime value);
    partial void OndataInizioChanged();
    partial void OnprezzoChanging(double value);
    partial void OnprezzoChanged();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    #endregion
		
		public ABBONAMENTO()
		{
			this._PAGAMENTOs = new EntitySet<PAGAMENTO>(new Action<PAGAMENTO>(this.attach_PAGAMENTOs), new Action<PAGAMENTO>(this.detach_PAGAMENTOs));
			this._TITOLARE_ACCOUNT = default(EntityRef<TITOLARE_ACCOUNT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codAbbonamento", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codAbbonamento
		{
			get
			{
				return this._codAbbonamento;
			}
			set
			{
				if ((this._codAbbonamento != value))
				{
					this.OncodAbbonamentoChanging(value);
					this.SendPropertyChanging();
					this._codAbbonamento = value;
					this.SendPropertyChanged("codAbbonamento");
					this.OncodAbbonamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataInizio", DbType="Date NOT NULL")]
		public System.DateTime dataInizio
		{
			get
			{
				return this._dataInizio;
			}
			set
			{
				if ((this._dataInizio != value))
				{
					this.OndataInizioChanging(value);
					this.SendPropertyChanging();
					this._dataInizio = value;
					this.SendPropertyChanged("dataInizio");
					this.OndataInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prezzo", DbType="Float NOT NULL")]
		public double prezzo
		{
			get
			{
				return this._prezzo;
			}
			set
			{
				if ((this._prezzo != value))
				{
					this.OnprezzoChanging(value);
					this.SendPropertyChanging();
					this._prezzo = value;
					this.SendPropertyChanged("prezzo");
					this.OnprezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					if (this._TITOLARE_ACCOUNT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABBONAMENTO_PAGAMENTO", Storage="_PAGAMENTOs", ThisKey="codAbbonamento", OtherKey="codAbbonamento")]
		public EntitySet<PAGAMENTO> PAGAMENTOs
		{
			get
			{
				return this._PAGAMENTOs;
			}
			set
			{
				this._PAGAMENTOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TITOLARE_ACCOUNT_ABBONAMENTO", Storage="_TITOLARE_ACCOUNT", ThisKey="CF", OtherKey="CF", IsForeignKey=true)]
		public TITOLARE_ACCOUNT TITOLARE_ACCOUNT
		{
			get
			{
				return this._TITOLARE_ACCOUNT.Entity;
			}
			set
			{
				TITOLARE_ACCOUNT previousValue = this._TITOLARE_ACCOUNT.Entity;
				if (((previousValue != value) 
							|| (this._TITOLARE_ACCOUNT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TITOLARE_ACCOUNT.Entity = null;
						previousValue.ABBONAMENTOs.Remove(this);
					}
					this._TITOLARE_ACCOUNT.Entity = value;
					if ((value != null))
					{
						value.ABBONAMENTOs.Add(this);
						this._CF = value.CF;
					}
					else
					{
						this._CF = default(string);
					}
					this.SendPropertyChanged("TITOLARE_ACCOUNT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PAGAMENTOs(PAGAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.ABBONAMENTO = this;
		}
		
		private void detach_PAGAMENTOs(PAGAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.ABBONAMENTO = null;
		}

        /*public static implicit operator ABBONAMENTO(ABBONAMENTO v)
        {
            throw new NotImplementedException();
        }*/
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VISIONE")]
	public partial class VISIONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nomeAccount;
		
		private string _nomeUtente;
		
		private System.DateTime _data;
		
		private System.TimeSpan _ora;
		
		private System.TimeSpan _minutoArrivo;
		
		private string _codEpisodio;
		
		private string _codFilm;
		
		private EntityRef<EPISODIO> _EPISODIO;
		
		private EntityRef<FILM> _FILM;
		
		private EntityRef<UTENTE> _UTENTE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnomeAccountChanging(string value);
    partial void OnnomeAccountChanged();
    partial void OnnomeUtenteChanging(string value);
    partial void OnnomeUtenteChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnoraChanging(System.TimeSpan value);
    partial void OnoraChanged();
    partial void OnminutoArrivoChanging(System.TimeSpan value);
    partial void OnminutoArrivoChanged();
    partial void OncodEpisodioChanging(string value);
    partial void OncodEpisodioChanged();
    partial void OncodFilmChanging(string value);
    partial void OncodFilmChanged();
    #endregion
		
		public VISIONE()
		{
			this._EPISODIO = default(EntityRef<EPISODIO>);
			this._FILM = default(EntityRef<FILM>);
			this._UTENTE = default(EntityRef<UTENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeAccount", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nomeAccount
		{
			get
			{
				return this._nomeAccount;
			}
			set
			{
				if ((this._nomeAccount != value))
				{
					if (this._UTENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnomeAccountChanging(value);
					this.SendPropertyChanging();
					this._nomeAccount = value;
					this.SendPropertyChanged("nomeAccount");
					this.OnnomeAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeUtente", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nomeUtente
		{
			get
			{
				return this._nomeUtente;
			}
			set
			{
				if ((this._nomeUtente != value))
				{
					if (this._UTENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnomeUtenteChanging(value);
					this.SendPropertyChanging();
					this._nomeUtente = value;
					this.SendPropertyChanged("nomeUtente");
					this.OnnomeUtenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ora", DbType="Time NOT NULL", IsPrimaryKey=true)]
		public System.TimeSpan ora
		{
			get
			{
				return this._ora;
			}
			set
			{
				if ((this._ora != value))
				{
					this.OnoraChanging(value);
					this.SendPropertyChanging();
					this._ora = value;
					this.SendPropertyChanged("ora");
					this.OnoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minutoArrivo", DbType="Time NOT NULL")]
		public System.TimeSpan minutoArrivo
		{
			get
			{
				return this._minutoArrivo;
			}
			set
			{
				if ((this._minutoArrivo != value))
				{
					this.OnminutoArrivoChanging(value);
					this.SendPropertyChanging();
					this._minutoArrivo = value;
					this.SendPropertyChanged("minutoArrivo");
					this.OnminutoArrivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codEpisodio", DbType="VarChar(255)")]
		public string codEpisodio
		{
			get
			{
				return this._codEpisodio;
			}
			set
			{
				if ((this._codEpisodio != value))
				{
					if (this._EPISODIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodEpisodioChanging(value);
					this.SendPropertyChanging();
					this._codEpisodio = value;
					this.SendPropertyChanged("codEpisodio");
					this.OncodEpisodioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codFilm", DbType="VarChar(255)")]
		public string codFilm
		{
			get
			{
				return this._codFilm;
			}
			set
			{
				if ((this._codFilm != value))
				{
					if (this._FILM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodFilmChanging(value);
					this.SendPropertyChanging();
					this._codFilm = value;
					this.SendPropertyChanged("codFilm");
					this.OncodFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPISODIO_VISIONE", Storage="_EPISODIO", ThisKey="codEpisodio", OtherKey="codEpisodio", IsForeignKey=true)]
		public EPISODIO EPISODIO
		{
			get
			{
				return this._EPISODIO.Entity;
			}
			set
			{
				EPISODIO previousValue = this._EPISODIO.Entity;
				if (((previousValue != value) 
							|| (this._EPISODIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EPISODIO.Entity = null;
						previousValue.VISIONEs.Remove(this);
					}
					this._EPISODIO.Entity = value;
					if ((value != null))
					{
						value.VISIONEs.Add(this);
						this._codEpisodio = value.codEpisodio;
					}
					else
					{
						this._codEpisodio = default(string);
					}
					this.SendPropertyChanged("EPISODIO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FILM_VISIONE", Storage="_FILM", ThisKey="codFilm", OtherKey="codFilm", IsForeignKey=true)]
		public FILM FILM
		{
			get
			{
				return this._FILM.Entity;
			}
			set
			{
				FILM previousValue = this._FILM.Entity;
				if (((previousValue != value) 
							|| (this._FILM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FILM.Entity = null;
						previousValue.VISIONEs.Remove(this);
					}
					this._FILM.Entity = value;
					if ((value != null))
					{
						value.VISIONEs.Add(this);
						this._codFilm = value.codFilm;
					}
					else
					{
						this._codFilm = default(string);
					}
					this.SendPropertyChanged("FILM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_VISIONE", Storage="_UTENTE", ThisKey="nomeAccount,nomeUtente", OtherKey="nomeAccount,nomeUtente", IsForeignKey=true)]
		public UTENTE UTENTE
		{
			get
			{
				return this._UTENTE.Entity;
			}
			set
			{
				UTENTE previousValue = this._UTENTE.Entity;
				if (((previousValue != value) 
							|| (this._UTENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UTENTE.Entity = null;
						previousValue.VISIONEs.Remove(this);
					}
					this._UTENTE.Entity = value;
					if ((value != null))
					{
						value.VISIONEs.Add(this);
						this._nomeAccount = value.nomeAccount;
						this._nomeUtente = value.nomeUtente;
					}
					else
					{
						this._nomeAccount = default(string);
						this._nomeUtente = default(string);
					}
					this.SendPropertyChanged("UTENTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCOUNT")]
	public partial class ACCOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nomeAccount;
		
		private string _password;
		
		private EntitySet<TITOLARE_ACCOUNT> _TITOLARE_ACCOUNTs;
		
		private EntitySet<UTENTE> _UTENTEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnomeAccountChanging(string value);
    partial void OnnomeAccountChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public ACCOUNT()
		{
			this._TITOLARE_ACCOUNTs = new EntitySet<TITOLARE_ACCOUNT>(new Action<TITOLARE_ACCOUNT>(this.attach_TITOLARE_ACCOUNTs), new Action<TITOLARE_ACCOUNT>(this.detach_TITOLARE_ACCOUNTs));
			this._UTENTEs = new EntitySet<UTENTE>(new Action<UTENTE>(this.attach_UTENTEs), new Action<UTENTE>(this.detach_UTENTEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeAccount", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nomeAccount
		{
			get
			{
				return this._nomeAccount;
			}
			set
			{
				if ((this._nomeAccount != value))
				{
					this.OnnomeAccountChanging(value);
					this.SendPropertyChanging();
					this._nomeAccount = value;
					this.SendPropertyChanged("nomeAccount");
					this.OnnomeAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_TITOLARE_ACCOUNT", Storage="_TITOLARE_ACCOUNTs", ThisKey="nomeAccount", OtherKey="nomeAccount")]
		public EntitySet<TITOLARE_ACCOUNT> TITOLARE_ACCOUNTs
		{
			get
			{
				return this._TITOLARE_ACCOUNTs;
			}
			set
			{
				this._TITOLARE_ACCOUNTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_UTENTE", Storage="_UTENTEs", ThisKey="nomeAccount", OtherKey="nomeAccount")]
		public EntitySet<UTENTE> UTENTEs
		{
			get
			{
				return this._UTENTEs;
			}
			set
			{
				this._UTENTEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TITOLARE_ACCOUNTs(TITOLARE_ACCOUNT entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = this;
		}
		
		private void detach_TITOLARE_ACCOUNTs(TITOLARE_ACCOUNT entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = null;
		}
		
		private void attach_UTENTEs(UTENTE entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = this;
		}
		
		private void detach_UTENTEs(UTENTE entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.appartenere_ep")]
	public partial class appartenere_ep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codGenere;
		
		private string _codEpisodio;
		
		private EntityRef<EPISODIO> _EPISODIO;
		
		private EntityRef<GENERE> _GENERE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodGenereChanging(string value);
    partial void OncodGenereChanged();
    partial void OncodEpisodioChanging(string value);
    partial void OncodEpisodioChanged();
    #endregion
		
		public appartenere_ep()
		{
			this._EPISODIO = default(EntityRef<EPISODIO>);
			this._GENERE = default(EntityRef<GENERE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codGenere", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codGenere
		{
			get
			{
				return this._codGenere;
			}
			set
			{
				if ((this._codGenere != value))
				{
					if (this._GENERE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodGenereChanging(value);
					this.SendPropertyChanging();
					this._codGenere = value;
					this.SendPropertyChanged("codGenere");
					this.OncodGenereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codEpisodio", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codEpisodio
		{
			get
			{
				return this._codEpisodio;
			}
			set
			{
				if ((this._codEpisodio != value))
				{
					if (this._EPISODIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodEpisodioChanging(value);
					this.SendPropertyChanging();
					this._codEpisodio = value;
					this.SendPropertyChanged("codEpisodio");
					this.OncodEpisodioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPISODIO_appartenere_ep", Storage="_EPISODIO", ThisKey="codEpisodio", OtherKey="codEpisodio", IsForeignKey=true)]
		public EPISODIO EPISODIO
		{
			get
			{
				return this._EPISODIO.Entity;
			}
			set
			{
				EPISODIO previousValue = this._EPISODIO.Entity;
				if (((previousValue != value) 
							|| (this._EPISODIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EPISODIO.Entity = null;
						previousValue.appartenere_eps.Remove(this);
					}
					this._EPISODIO.Entity = value;
					if ((value != null))
					{
						value.appartenere_eps.Add(this);
						this._codEpisodio = value.codEpisodio;
					}
					else
					{
						this._codEpisodio = default(string);
					}
					this.SendPropertyChanged("EPISODIO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GENERE_appartenere_ep", Storage="_GENERE", ThisKey="codGenere", OtherKey="codGenere", IsForeignKey=true)]
		public GENERE GENERE
		{
			get
			{
				return this._GENERE.Entity;
			}
			set
			{
				GENERE previousValue = this._GENERE.Entity;
				if (((previousValue != value) 
							|| (this._GENERE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GENERE.Entity = null;
						previousValue.appartenere_eps.Remove(this);
					}
					this._GENERE.Entity = value;
					if ((value != null))
					{
						value.appartenere_eps.Add(this);
						this._codGenere = value.codGenere;
					}
					else
					{
						this._codGenere = default(string);
					}
					this.SendPropertyChanged("GENERE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.appartenere_film")]
	public partial class appartenere_film : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codGenere;
		
		private string _codFilm;
		
		private EntityRef<FILM> _FILM;
		
		private EntityRef<GENERE> _GENERE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodGenereChanging(string value);
    partial void OncodGenereChanged();
    partial void OncodFilmChanging(string value);
    partial void OncodFilmChanged();
    #endregion
		
		public appartenere_film()
		{
			this._FILM = default(EntityRef<FILM>);
			this._GENERE = default(EntityRef<GENERE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codGenere", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codGenere
		{
			get
			{
				return this._codGenere;
			}
			set
			{
				if ((this._codGenere != value))
				{
					if (this._GENERE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodGenereChanging(value);
					this.SendPropertyChanging();
					this._codGenere = value;
					this.SendPropertyChanged("codGenere");
					this.OncodGenereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codFilm", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codFilm
		{
			get
			{
				return this._codFilm;
			}
			set
			{
				if ((this._codFilm != value))
				{
					if (this._FILM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodFilmChanging(value);
					this.SendPropertyChanging();
					this._codFilm = value;
					this.SendPropertyChanged("codFilm");
					this.OncodFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FILM_appartenere_film", Storage="_FILM", ThisKey="codFilm", OtherKey="codFilm", IsForeignKey=true)]
		public FILM FILM
		{
			get
			{
				return this._FILM.Entity;
			}
			set
			{
				FILM previousValue = this._FILM.Entity;
				if (((previousValue != value) 
							|| (this._FILM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FILM.Entity = null;
						previousValue.appartenere_films.Remove(this);
					}
					this._FILM.Entity = value;
					if ((value != null))
					{
						value.appartenere_films.Add(this);
						this._codFilm = value.codFilm;
					}
					else
					{
						this._codFilm = default(string);
					}
					this.SendPropertyChanged("FILM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GENERE_appartenere_film", Storage="_GENERE", ThisKey="codGenere", OtherKey="codGenere", IsForeignKey=true)]
		public GENERE GENERE
		{
			get
			{
				return this._GENERE.Entity;
			}
			set
			{
				GENERE previousValue = this._GENERE.Entity;
				if (((previousValue != value) 
							|| (this._GENERE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GENERE.Entity = null;
						previousValue.appartenere_films.Remove(this);
					}
					this._GENERE.Entity = value;
					if ((value != null))
					{
						value.appartenere_films.Add(this);
						this._codGenere = value.codGenere;
					}
					else
					{
						this._codGenere = default(string);
					}
					this.SendPropertyChanged("GENERE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CASA_PRODUTTRICE")]
	public partial class CASA_PRODUTTRICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codCasaProduttrice;
		
		private string _nome;
		
		private int _annoFondazione;
		
		private EntitySet<produrre_ep> _produrre_eps;
		
		private EntitySet<produrre_film> _produrre_films;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodCasaProduttriceChanging(string value);
    partial void OncodCasaProduttriceChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnannoFondazioneChanging(int value);
    partial void OnannoFondazioneChanged();
    #endregion
		
		public CASA_PRODUTTRICE()
		{
			this._produrre_eps = new EntitySet<produrre_ep>(new Action<produrre_ep>(this.attach_produrre_eps), new Action<produrre_ep>(this.detach_produrre_eps));
			this._produrre_films = new EntitySet<produrre_film>(new Action<produrre_film>(this.attach_produrre_films), new Action<produrre_film>(this.detach_produrre_films));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codCasaProduttrice", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codCasaProduttrice
		{
			get
			{
				return this._codCasaProduttrice;
			}
			set
			{
				if ((this._codCasaProduttrice != value))
				{
					this.OncodCasaProduttriceChanging(value);
					this.SendPropertyChanging();
					this._codCasaProduttrice = value;
					this.SendPropertyChanged("codCasaProduttrice");
					this.OncodCasaProduttriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_annoFondazione", DbType="Int NOT NULL")]
		public int annoFondazione
		{
			get
			{
				return this._annoFondazione;
			}
			set
			{
				if ((this._annoFondazione != value))
				{
					this.OnannoFondazioneChanging(value);
					this.SendPropertyChanging();
					this._annoFondazione = value;
					this.SendPropertyChanged("annoFondazione");
					this.OnannoFondazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASA_PRODUTTRICE_produrre_ep", Storage="_produrre_eps", ThisKey="codCasaProduttrice", OtherKey="codCasaProduttrice")]
		public EntitySet<produrre_ep> produrre_eps
		{
			get
			{
				return this._produrre_eps;
			}
			set
			{
				this._produrre_eps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASA_PRODUTTRICE_produrre_film", Storage="_produrre_films", ThisKey="codCasaProduttrice", OtherKey="codCasaProduttrice")]
		public EntitySet<produrre_film> produrre_films
		{
			get
			{
				return this._produrre_films;
			}
			set
			{
				this._produrre_films.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_produrre_eps(produrre_ep entity)
		{
			this.SendPropertyChanging();
			entity.CASA_PRODUTTRICE = this;
		}
		
		private void detach_produrre_eps(produrre_ep entity)
		{
			this.SendPropertyChanging();
			entity.CASA_PRODUTTRICE = null;
		}
		
		private void attach_produrre_films(produrre_film entity)
		{
			this.SendPropertyChanging();
			entity.CASA_PRODUTTRICE = this;
		}
		
		private void detach_produrre_films(produrre_film entity)
		{
			this.SendPropertyChanging();
			entity.CASA_PRODUTTRICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAST")]
	public partial class CAST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codArtista;
		
		private string _nome;
		
		private string _cognome;
		
		private char _attore;
		
		private char _regista;
		
		private string _nomePersonaggio;
		
		private EntitySet<partecipare_ep> _partecipare_eps;
		
		private EntitySet<partecipare_film> _partecipare_films;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodArtistaChanging(string value);
    partial void OncodArtistaChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OncognomeChanging(string value);
    partial void OncognomeChanged();
    partial void OnattoreChanging(char value);
    partial void OnattoreChanged();
    partial void OnregistaChanging(char value);
    partial void OnregistaChanged();
    partial void OnnomePersonaggioChanging(string value);
    partial void OnnomePersonaggioChanged();
    #endregion
		
		public CAST()
		{
			this._partecipare_eps = new EntitySet<partecipare_ep>(new Action<partecipare_ep>(this.attach_partecipare_eps), new Action<partecipare_ep>(this.detach_partecipare_eps));
			this._partecipare_films = new EntitySet<partecipare_film>(new Action<partecipare_film>(this.attach_partecipare_films), new Action<partecipare_film>(this.detach_partecipare_films));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codArtista", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codArtista
		{
			get
			{
				return this._codArtista;
			}
			set
			{
				if ((this._codArtista != value))
				{
					this.OncodArtistaChanging(value);
					this.SendPropertyChanging();
					this._codArtista = value;
					this.SendPropertyChanged("codArtista");
					this.OncodArtistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cognome", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string cognome
		{
			get
			{
				return this._cognome;
			}
			set
			{
				if ((this._cognome != value))
				{
					this.OncognomeChanging(value);
					this.SendPropertyChanging();
					this._cognome = value;
					this.SendPropertyChanged("cognome");
					this.OncognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attore", DbType="Char(1) NOT NULL")]
		public char attore
		{
			get
			{
				return this._attore;
			}
			set
			{
				if ((this._attore != value))
				{
					this.OnattoreChanging(value);
					this.SendPropertyChanging();
					this._attore = value;
					this.SendPropertyChanged("attore");
					this.OnattoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regista", DbType="Char(1) NOT NULL")]
		public char regista
		{
			get
			{
				return this._regista;
			}
			set
			{
				if ((this._regista != value))
				{
					this.OnregistaChanging(value);
					this.SendPropertyChanging();
					this._regista = value;
					this.SendPropertyChanged("regista");
					this.OnregistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomePersonaggio", DbType="VarChar(255)")]
		public string nomePersonaggio
		{
			get
			{
				return this._nomePersonaggio;
			}
			set
			{
				if ((this._nomePersonaggio != value))
				{
					this.OnnomePersonaggioChanging(value);
					this.SendPropertyChanging();
					this._nomePersonaggio = value;
					this.SendPropertyChanged("nomePersonaggio");
					this.OnnomePersonaggioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAST_partecipare_ep", Storage="_partecipare_eps", ThisKey="codArtista", OtherKey="codArtista")]
		public EntitySet<partecipare_ep> partecipare_eps
		{
			get
			{
				return this._partecipare_eps;
			}
			set
			{
				this._partecipare_eps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAST_partecipare_film", Storage="_partecipare_films", ThisKey="codArtista", OtherKey="codArtista")]
		public EntitySet<partecipare_film> partecipare_films
		{
			get
			{
				return this._partecipare_films;
			}
			set
			{
				this._partecipare_films.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_partecipare_eps(partecipare_ep entity)
		{
			this.SendPropertyChanging();
			entity.CAST = this;
		}
		
		private void detach_partecipare_eps(partecipare_ep entity)
		{
			this.SendPropertyChanging();
			entity.CAST = null;
		}
		
		private void attach_partecipare_films(partecipare_film entity)
		{
			this.SendPropertyChanging();
			entity.CAST = this;
		}
		
		private void detach_partecipare_films(partecipare_film entity)
		{
			this.SendPropertyChanging();
			entity.CAST = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.distribuire_ep")]
	public partial class distribuire_ep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codLingua;
		
		private string _codEpisodio;
		
		private EntityRef<EPISODIO> _EPISODIO;
		
		private EntityRef<LINGUA> _LINGUA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodLinguaChanging(string value);
    partial void OncodLinguaChanged();
    partial void OncodEpisodioChanging(string value);
    partial void OncodEpisodioChanged();
    #endregion
		
		public distribuire_ep()
		{
			this._EPISODIO = default(EntityRef<EPISODIO>);
			this._LINGUA = default(EntityRef<LINGUA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codLingua", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codLingua
		{
			get
			{
				return this._codLingua;
			}
			set
			{
				if ((this._codLingua != value))
				{
					if (this._LINGUA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodLinguaChanging(value);
					this.SendPropertyChanging();
					this._codLingua = value;
					this.SendPropertyChanged("codLingua");
					this.OncodLinguaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codEpisodio", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codEpisodio
		{
			get
			{
				return this._codEpisodio;
			}
			set
			{
				if ((this._codEpisodio != value))
				{
					if (this._EPISODIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodEpisodioChanging(value);
					this.SendPropertyChanging();
					this._codEpisodio = value;
					this.SendPropertyChanged("codEpisodio");
					this.OncodEpisodioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPISODIO_distribuire_ep", Storage="_EPISODIO", ThisKey="codEpisodio", OtherKey="codEpisodio", IsForeignKey=true)]
		public EPISODIO EPISODIO
		{
			get
			{
				return this._EPISODIO.Entity;
			}
			set
			{
				EPISODIO previousValue = this._EPISODIO.Entity;
				if (((previousValue != value) 
							|| (this._EPISODIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EPISODIO.Entity = null;
						previousValue.distribuire_eps.Remove(this);
					}
					this._EPISODIO.Entity = value;
					if ((value != null))
					{
						value.distribuire_eps.Add(this);
						this._codEpisodio = value.codEpisodio;
					}
					else
					{
						this._codEpisodio = default(string);
					}
					this.SendPropertyChanged("EPISODIO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LINGUA_distribuire_ep", Storage="_LINGUA", ThisKey="codLingua", OtherKey="codLingua", IsForeignKey=true)]
		public LINGUA LINGUA
		{
			get
			{
				return this._LINGUA.Entity;
			}
			set
			{
				LINGUA previousValue = this._LINGUA.Entity;
				if (((previousValue != value) 
							|| (this._LINGUA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LINGUA.Entity = null;
						previousValue.distribuire_eps.Remove(this);
					}
					this._LINGUA.Entity = value;
					if ((value != null))
					{
						value.distribuire_eps.Add(this);
						this._codLingua = value.codLingua;
					}
					else
					{
						this._codLingua = default(string);
					}
					this.SendPropertyChanged("LINGUA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.distribuire_film")]
	public partial class distribuire_film : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codLingua;
		
		private string _codFilm;
		
		private EntityRef<FILM> _FILM;
		
		private EntityRef<LINGUA> _LINGUA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodLinguaChanging(string value);
    partial void OncodLinguaChanged();
    partial void OncodFilmChanging(string value);
    partial void OncodFilmChanged();
    #endregion
		
		public distribuire_film()
		{
			this._FILM = default(EntityRef<FILM>);
			this._LINGUA = default(EntityRef<LINGUA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codLingua", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codLingua
		{
			get
			{
				return this._codLingua;
			}
			set
			{
				if ((this._codLingua != value))
				{
					if (this._LINGUA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodLinguaChanging(value);
					this.SendPropertyChanging();
					this._codLingua = value;
					this.SendPropertyChanged("codLingua");
					this.OncodLinguaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codFilm", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codFilm
		{
			get
			{
				return this._codFilm;
			}
			set
			{
				if ((this._codFilm != value))
				{
					if (this._FILM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodFilmChanging(value);
					this.SendPropertyChanging();
					this._codFilm = value;
					this.SendPropertyChanged("codFilm");
					this.OncodFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FILM_distribuire_film", Storage="_FILM", ThisKey="codFilm", OtherKey="codFilm", IsForeignKey=true)]
		public FILM FILM
		{
			get
			{
				return this._FILM.Entity;
			}
			set
			{
				FILM previousValue = this._FILM.Entity;
				if (((previousValue != value) 
							|| (this._FILM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FILM.Entity = null;
						previousValue.distribuire_films.Remove(this);
					}
					this._FILM.Entity = value;
					if ((value != null))
					{
						value.distribuire_films.Add(this);
						this._codFilm = value.codFilm;
					}
					else
					{
						this._codFilm = default(string);
					}
					this.SendPropertyChanged("FILM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LINGUA_distribuire_film", Storage="_LINGUA", ThisKey="codLingua", OtherKey="codLingua", IsForeignKey=true)]
		public LINGUA LINGUA
		{
			get
			{
				return this._LINGUA.Entity;
			}
			set
			{
				LINGUA previousValue = this._LINGUA.Entity;
				if (((previousValue != value) 
							|| (this._LINGUA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LINGUA.Entity = null;
						previousValue.distribuire_films.Remove(this);
					}
					this._LINGUA.Entity = value;
					if ((value != null))
					{
						value.distribuire_films.Add(this);
						this._codLingua = value.codLingua;
					}
					else
					{
						this._codLingua = default(string);
					}
					this.SendPropertyChanged("LINGUA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EPISODIO")]
	public partial class EPISODIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codEpisodio;
		
		private string _titolo;
		
		private System.TimeSpan _durataComplessiva;
		
		private string _vistoCensura;
		
		private int _numero;
		
		private int _annoUscita;
		
		private string _codiceSerie;
		
		private int _numeroStagione;
		
		private EntitySet<VISIONE> _VISIONEs;
		
		private EntitySet<appartenere_ep> _appartenere_eps;
		
		private EntitySet<distribuire_ep> _distribuire_eps;
		
		private EntitySet<partecipare_ep> _partecipare_eps;
		
		private EntitySet<produrre_ep> _produrre_eps;
		
		private EntityRef<STAGIONE> _STAGIONE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodEpisodioChanging(string value);
    partial void OncodEpisodioChanged();
    partial void OntitoloChanging(string value);
    partial void OntitoloChanged();
    partial void OndurataComplessivaChanging(System.TimeSpan value);
    partial void OndurataComplessivaChanged();
    partial void OnvistoCensuraChanging(string value);
    partial void OnvistoCensuraChanged();
    partial void OnnumeroChanging(int value);
    partial void OnnumeroChanged();
    partial void OnannoUscitaChanging(int value);
    partial void OnannoUscitaChanged();
    partial void OncodiceSerieChanging(string value);
    partial void OncodiceSerieChanged();
    partial void OnnumeroStagioneChanging(int value);
    partial void OnnumeroStagioneChanged();
    #endregion
		
		public EPISODIO()
		{
			this._VISIONEs = new EntitySet<VISIONE>(new Action<VISIONE>(this.attach_VISIONEs), new Action<VISIONE>(this.detach_VISIONEs));
			this._appartenere_eps = new EntitySet<appartenere_ep>(new Action<appartenere_ep>(this.attach_appartenere_eps), new Action<appartenere_ep>(this.detach_appartenere_eps));
			this._distribuire_eps = new EntitySet<distribuire_ep>(new Action<distribuire_ep>(this.attach_distribuire_eps), new Action<distribuire_ep>(this.detach_distribuire_eps));
			this._partecipare_eps = new EntitySet<partecipare_ep>(new Action<partecipare_ep>(this.attach_partecipare_eps), new Action<partecipare_ep>(this.detach_partecipare_eps));
			this._produrre_eps = new EntitySet<produrre_ep>(new Action<produrre_ep>(this.attach_produrre_eps), new Action<produrre_ep>(this.detach_produrre_eps));
			this._STAGIONE = default(EntityRef<STAGIONE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codEpisodio", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codEpisodio
		{
			get
			{
				return this._codEpisodio;
			}
			set
			{
				if ((this._codEpisodio != value))
				{
					this.OncodEpisodioChanging(value);
					this.SendPropertyChanging();
					this._codEpisodio = value;
					this.SendPropertyChanged("codEpisodio");
					this.OncodEpisodioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titolo", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string titolo
		{
			get
			{
				return this._titolo;
			}
			set
			{
				if ((this._titolo != value))
				{
					this.OntitoloChanging(value);
					this.SendPropertyChanging();
					this._titolo = value;
					this.SendPropertyChanged("titolo");
					this.OntitoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_durataComplessiva", DbType="Time NOT NULL")]
		public System.TimeSpan durataComplessiva
		{
			get
			{
				return this._durataComplessiva;
			}
			set
			{
				if ((this._durataComplessiva != value))
				{
					this.OndurataComplessivaChanging(value);
					this.SendPropertyChanging();
					this._durataComplessiva = value;
					this.SendPropertyChanged("durataComplessiva");
					this.OndurataComplessivaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vistoCensura", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string vistoCensura
		{
			get
			{
				return this._vistoCensura;
			}
			set
			{
				if ((this._vistoCensura != value))
				{
					this.OnvistoCensuraChanging(value);
					this.SendPropertyChanging();
					this._vistoCensura = value;
					this.SendPropertyChanged("vistoCensura");
					this.OnvistoCensuraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero", DbType="Int NOT NULL")]
		public int numero
		{
			get
			{
				return this._numero;
			}
			set
			{
				if ((this._numero != value))
				{
					this.OnnumeroChanging(value);
					this.SendPropertyChanging();
					this._numero = value;
					this.SendPropertyChanged("numero");
					this.OnnumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_annoUscita", DbType="Int NOT NULL")]
		public int annoUscita
		{
			get
			{
				return this._annoUscita;
			}
			set
			{
				if ((this._annoUscita != value))
				{
					this.OnannoUscitaChanging(value);
					this.SendPropertyChanging();
					this._annoUscita = value;
					this.SendPropertyChanged("annoUscita");
					this.OnannoUscitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codiceSerie", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string codiceSerie
		{
			get
			{
				return this._codiceSerie;
			}
			set
			{
				if ((this._codiceSerie != value))
				{
					if (this._STAGIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodiceSerieChanging(value);
					this.SendPropertyChanging();
					this._codiceSerie = value;
					this.SendPropertyChanged("codiceSerie");
					this.OncodiceSerieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numeroStagione", DbType="Int NOT NULL")]
		public int numeroStagione
		{
			get
			{
				return this._numeroStagione;
			}
			set
			{
				if ((this._numeroStagione != value))
				{
					if (this._STAGIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnumeroStagioneChanging(value);
					this.SendPropertyChanging();
					this._numeroStagione = value;
					this.SendPropertyChanged("numeroStagione");
					this.OnnumeroStagioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPISODIO_VISIONE", Storage="_VISIONEs", ThisKey="codEpisodio", OtherKey="codEpisodio")]
		public EntitySet<VISIONE> VISIONEs
		{
			get
			{
				return this._VISIONEs;
			}
			set
			{
				this._VISIONEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPISODIO_appartenere_ep", Storage="_appartenere_eps", ThisKey="codEpisodio", OtherKey="codEpisodio")]
		public EntitySet<appartenere_ep> appartenere_eps
		{
			get
			{
				return this._appartenere_eps;
			}
			set
			{
				this._appartenere_eps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPISODIO_distribuire_ep", Storage="_distribuire_eps", ThisKey="codEpisodio", OtherKey="codEpisodio")]
		public EntitySet<distribuire_ep> distribuire_eps
		{
			get
			{
				return this._distribuire_eps;
			}
			set
			{
				this._distribuire_eps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPISODIO_partecipare_ep", Storage="_partecipare_eps", ThisKey="codEpisodio", OtherKey="codEpisodio")]
		public EntitySet<partecipare_ep> partecipare_eps
		{
			get
			{
				return this._partecipare_eps;
			}
			set
			{
				this._partecipare_eps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPISODIO_produrre_ep", Storage="_produrre_eps", ThisKey="codEpisodio", OtherKey="codEpisodio")]
		public EntitySet<produrre_ep> produrre_eps
		{
			get
			{
				return this._produrre_eps;
			}
			set
			{
				this._produrre_eps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STAGIONE_EPISODIO", Storage="_STAGIONE", ThisKey="codiceSerie,numeroStagione", OtherKey="codiceSerie,numeroStagione", IsForeignKey=true)]
		public STAGIONE STAGIONE
		{
			get
			{
				return this._STAGIONE.Entity;
			}
			set
			{
				STAGIONE previousValue = this._STAGIONE.Entity;
				if (((previousValue != value) 
							|| (this._STAGIONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STAGIONE.Entity = null;
						previousValue.EPISODIOs.Remove(this);
					}
					this._STAGIONE.Entity = value;
					if ((value != null))
					{
						value.EPISODIOs.Add(this);
						this._codiceSerie = value.codiceSerie;
						this._numeroStagione = value.numeroStagione;
					}
					else
					{
						this._codiceSerie = default(string);
						this._numeroStagione = default(int);
					}
					this.SendPropertyChanged("STAGIONE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VISIONEs(VISIONE entity)
		{
			this.SendPropertyChanging();
			entity.EPISODIO = this;
		}
		
		private void detach_VISIONEs(VISIONE entity)
		{
			this.SendPropertyChanging();
			entity.EPISODIO = null;
		}
		
		private void attach_appartenere_eps(appartenere_ep entity)
		{
			this.SendPropertyChanging();
			entity.EPISODIO = this;
		}
		
		private void detach_appartenere_eps(appartenere_ep entity)
		{
			this.SendPropertyChanging();
			entity.EPISODIO = null;
		}
		
		private void attach_distribuire_eps(distribuire_ep entity)
		{
			this.SendPropertyChanging();
			entity.EPISODIO = this;
		}
		
		private void detach_distribuire_eps(distribuire_ep entity)
		{
			this.SendPropertyChanging();
			entity.EPISODIO = null;
		}
		
		private void attach_partecipare_eps(partecipare_ep entity)
		{
			this.SendPropertyChanging();
			entity.EPISODIO = this;
		}
		
		private void detach_partecipare_eps(partecipare_ep entity)
		{
			this.SendPropertyChanging();
			entity.EPISODIO = null;
		}
		
		private void attach_produrre_eps(produrre_ep entity)
		{
			this.SendPropertyChanging();
			entity.EPISODIO = this;
		}
		
		private void detach_produrre_eps(produrre_ep entity)
		{
			this.SendPropertyChanging();
			entity.EPISODIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FILM")]
	public partial class FILM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codFilm;
		
		private string _titolo;
		
		private System.TimeSpan _durataComplessiva;
		
		private string _vistoCensura;
		
		private int _annoUscita;
		
		private EntitySet<VISIONE> _VISIONEs;
		
		private EntitySet<appartenere_film> _appartenere_films;
		
		private EntitySet<distribuire_film> _distribuire_films;
		
		private EntitySet<partecipare_film> _partecipare_films;
		
		private EntitySet<produrre_film> _produrre_films;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodFilmChanging(string value);
    partial void OncodFilmChanged();
    partial void OntitoloChanging(string value);
    partial void OntitoloChanged();
    partial void OndurataComplessivaChanging(System.TimeSpan value);
    partial void OndurataComplessivaChanged();
    partial void OnvistoCensuraChanging(string value);
    partial void OnvistoCensuraChanged();
    partial void OnannoUscitaChanging(int value);
    partial void OnannoUscitaChanged();
    #endregion
		
		public FILM()
		{
			this._VISIONEs = new EntitySet<VISIONE>(new Action<VISIONE>(this.attach_VISIONEs), new Action<VISIONE>(this.detach_VISIONEs));
			this._appartenere_films = new EntitySet<appartenere_film>(new Action<appartenere_film>(this.attach_appartenere_films), new Action<appartenere_film>(this.detach_appartenere_films));
			this._distribuire_films = new EntitySet<distribuire_film>(new Action<distribuire_film>(this.attach_distribuire_films), new Action<distribuire_film>(this.detach_distribuire_films));
			this._partecipare_films = new EntitySet<partecipare_film>(new Action<partecipare_film>(this.attach_partecipare_films), new Action<partecipare_film>(this.detach_partecipare_films));
			this._produrre_films = new EntitySet<produrre_film>(new Action<produrre_film>(this.attach_produrre_films), new Action<produrre_film>(this.detach_produrre_films));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codFilm", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codFilm
		{
			get
			{
				return this._codFilm;
			}
			set
			{
				if ((this._codFilm != value))
				{
					this.OncodFilmChanging(value);
					this.SendPropertyChanging();
					this._codFilm = value;
					this.SendPropertyChanged("codFilm");
					this.OncodFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titolo", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string titolo
		{
			get
			{
				return this._titolo;
			}
			set
			{
				if ((this._titolo != value))
				{
					this.OntitoloChanging(value);
					this.SendPropertyChanging();
					this._titolo = value;
					this.SendPropertyChanged("titolo");
					this.OntitoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_durataComplessiva", DbType="Time NOT NULL")]
		public System.TimeSpan durataComplessiva
		{
			get
			{
				return this._durataComplessiva;
			}
			set
			{
				if ((this._durataComplessiva != value))
				{
					this.OndurataComplessivaChanging(value);
					this.SendPropertyChanging();
					this._durataComplessiva = value;
					this.SendPropertyChanged("durataComplessiva");
					this.OndurataComplessivaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vistoCensura", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string vistoCensura
		{
			get
			{
				return this._vistoCensura;
			}
			set
			{
				if ((this._vistoCensura != value))
				{
					this.OnvistoCensuraChanging(value);
					this.SendPropertyChanging();
					this._vistoCensura = value;
					this.SendPropertyChanged("vistoCensura");
					this.OnvistoCensuraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_annoUscita", DbType="Int NOT NULL")]
		public int annoUscita
		{
			get
			{
				return this._annoUscita;
			}
			set
			{
				if ((this._annoUscita != value))
				{
					this.OnannoUscitaChanging(value);
					this.SendPropertyChanging();
					this._annoUscita = value;
					this.SendPropertyChanged("annoUscita");
					this.OnannoUscitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FILM_VISIONE", Storage="_VISIONEs", ThisKey="codFilm", OtherKey="codFilm")]
		public EntitySet<VISIONE> VISIONEs
		{
			get
			{
				return this._VISIONEs;
			}
			set
			{
				this._VISIONEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FILM_appartenere_film", Storage="_appartenere_films", ThisKey="codFilm", OtherKey="codFilm")]
		public EntitySet<appartenere_film> appartenere_films
		{
			get
			{
				return this._appartenere_films;
			}
			set
			{
				this._appartenere_films.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FILM_distribuire_film", Storage="_distribuire_films", ThisKey="codFilm", OtherKey="codFilm")]
		public EntitySet<distribuire_film> distribuire_films
		{
			get
			{
				return this._distribuire_films;
			}
			set
			{
				this._distribuire_films.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FILM_partecipare_film", Storage="_partecipare_films", ThisKey="codFilm", OtherKey="codFilm")]
		public EntitySet<partecipare_film> partecipare_films
		{
			get
			{
				return this._partecipare_films;
			}
			set
			{
				this._partecipare_films.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FILM_produrre_film", Storage="_produrre_films", ThisKey="codFilm", OtherKey="codFilm")]
		public EntitySet<produrre_film> produrre_films
		{
			get
			{
				return this._produrre_films;
			}
			set
			{
				this._produrre_films.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VISIONEs(VISIONE entity)
		{
			this.SendPropertyChanging();
			entity.FILM = this;
		}
		
		private void detach_VISIONEs(VISIONE entity)
		{
			this.SendPropertyChanging();
			entity.FILM = null;
		}
		
		private void attach_appartenere_films(appartenere_film entity)
		{
			this.SendPropertyChanging();
			entity.FILM = this;
		}
		
		private void detach_appartenere_films(appartenere_film entity)
		{
			this.SendPropertyChanging();
			entity.FILM = null;
		}
		
		private void attach_distribuire_films(distribuire_film entity)
		{
			this.SendPropertyChanging();
			entity.FILM = this;
		}
		
		private void detach_distribuire_films(distribuire_film entity)
		{
			this.SendPropertyChanging();
			entity.FILM = null;
		}
		
		private void attach_partecipare_films(partecipare_film entity)
		{
			this.SendPropertyChanging();
			entity.FILM = this;
		}
		
		private void detach_partecipare_films(partecipare_film entity)
		{
			this.SendPropertyChanging();
			entity.FILM = null;
		}
		
		private void attach_produrre_films(produrre_film entity)
		{
			this.SendPropertyChanging();
			entity.FILM = this;
		}
		
		private void detach_produrre_films(produrre_film entity)
		{
			this.SendPropertyChanging();
			entity.FILM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GENERE")]
	public partial class GENERE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codGenere;
		
		private string _descrizione;
		
		private EntitySet<appartenere_ep> _appartenere_eps;
		
		private EntitySet<appartenere_film> _appartenere_films;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodGenereChanging(string value);
    partial void OncodGenereChanged();
    partial void OndescrizioneChanging(string value);
    partial void OndescrizioneChanged();
    #endregion
		
		public GENERE()
		{
			this._appartenere_eps = new EntitySet<appartenere_ep>(new Action<appartenere_ep>(this.attach_appartenere_eps), new Action<appartenere_ep>(this.detach_appartenere_eps));
			this._appartenere_films = new EntitySet<appartenere_film>(new Action<appartenere_film>(this.attach_appartenere_films), new Action<appartenere_film>(this.detach_appartenere_films));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codGenere", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codGenere
		{
			get
			{
				return this._codGenere;
			}
			set
			{
				if ((this._codGenere != value))
				{
					this.OncodGenereChanging(value);
					this.SendPropertyChanging();
					this._codGenere = value;
					this.SendPropertyChanged("codGenere");
					this.OncodGenereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descrizione", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string descrizione
		{
			get
			{
				return this._descrizione;
			}
			set
			{
				if ((this._descrizione != value))
				{
					this.OndescrizioneChanging(value);
					this.SendPropertyChanging();
					this._descrizione = value;
					this.SendPropertyChanged("descrizione");
					this.OndescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GENERE_appartenere_ep", Storage="_appartenere_eps", ThisKey="codGenere", OtherKey="codGenere")]
		public EntitySet<appartenere_ep> appartenere_eps
		{
			get
			{
				return this._appartenere_eps;
			}
			set
			{
				this._appartenere_eps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GENERE_appartenere_film", Storage="_appartenere_films", ThisKey="codGenere", OtherKey="codGenere")]
		public EntitySet<appartenere_film> appartenere_films
		{
			get
			{
				return this._appartenere_films;
			}
			set
			{
				this._appartenere_films.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_appartenere_eps(appartenere_ep entity)
		{
			this.SendPropertyChanging();
			entity.GENERE = this;
		}
		
		private void detach_appartenere_eps(appartenere_ep entity)
		{
			this.SendPropertyChanging();
			entity.GENERE = null;
		}
		
		private void attach_appartenere_films(appartenere_film entity)
		{
			this.SendPropertyChanging();
			entity.GENERE = this;
		}
		
		private void detach_appartenere_films(appartenere_film entity)
		{
			this.SendPropertyChanging();
			entity.GENERE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LINGUA")]
	public partial class LINGUA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codLingua;
		
		private string _lingua1;
		
		private EntitySet<distribuire_ep> _distribuire_eps;
		
		private EntitySet<distribuire_film> _distribuire_films;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodLinguaChanging(string value);
    partial void OncodLinguaChanged();
    partial void Onlingua1Changing(string value);
    partial void Onlingua1Changed();
    #endregion
		
		public LINGUA()
		{
			this._distribuire_eps = new EntitySet<distribuire_ep>(new Action<distribuire_ep>(this.attach_distribuire_eps), new Action<distribuire_ep>(this.detach_distribuire_eps));
			this._distribuire_films = new EntitySet<distribuire_film>(new Action<distribuire_film>(this.attach_distribuire_films), new Action<distribuire_film>(this.detach_distribuire_films));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codLingua", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codLingua
		{
			get
			{
				return this._codLingua;
			}
			set
			{
				if ((this._codLingua != value))
				{
					this.OncodLinguaChanging(value);
					this.SendPropertyChanging();
					this._codLingua = value;
					this.SendPropertyChanged("codLingua");
					this.OncodLinguaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="lingua", Storage="_lingua1", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string lingua1
		{
			get
			{
				return this._lingua1;
			}
			set
			{
				if ((this._lingua1 != value))
				{
					this.Onlingua1Changing(value);
					this.SendPropertyChanging();
					this._lingua1 = value;
					this.SendPropertyChanged("lingua1");
					this.Onlingua1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LINGUA_distribuire_ep", Storage="_distribuire_eps", ThisKey="codLingua", OtherKey="codLingua")]
		public EntitySet<distribuire_ep> distribuire_eps
		{
			get
			{
				return this._distribuire_eps;
			}
			set
			{
				this._distribuire_eps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LINGUA_distribuire_film", Storage="_distribuire_films", ThisKey="codLingua", OtherKey="codLingua")]
		public EntitySet<distribuire_film> distribuire_films
		{
			get
			{
				return this._distribuire_films;
			}
			set
			{
				this._distribuire_films.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_distribuire_eps(distribuire_ep entity)
		{
			this.SendPropertyChanging();
			entity.LINGUA = this;
		}
		
		private void detach_distribuire_eps(distribuire_ep entity)
		{
			this.SendPropertyChanging();
			entity.LINGUA = null;
		}
		
		private void attach_distribuire_films(distribuire_film entity)
		{
			this.SendPropertyChanging();
			entity.LINGUA = this;
		}
		
		private void detach_distribuire_films(distribuire_film entity)
		{
			this.SendPropertyChanging();
			entity.LINGUA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAGAMENTO")]
	public partial class PAGAMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codAbbonamento;
		
		private System.DateTime _dataPagamento;
		
		private double _importo;
		
		private EntityRef<ABBONAMENTO> _ABBONAMENTO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodAbbonamentoChanging(string value);
    partial void OncodAbbonamentoChanged();
    partial void OndataPagamentoChanging(System.DateTime value);
    partial void OndataPagamentoChanged();
    partial void OnimportoChanging(double value);
    partial void OnimportoChanged();
    #endregion
		
		public PAGAMENTO()
		{
			this._ABBONAMENTO = default(EntityRef<ABBONAMENTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codAbbonamento", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codAbbonamento
		{
			get
			{
				return this._codAbbonamento;
			}
			set
			{
				if ((this._codAbbonamento != value))
				{
					if (this._ABBONAMENTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodAbbonamentoChanging(value);
					this.SendPropertyChanging();
					this._codAbbonamento = value;
					this.SendPropertyChanged("codAbbonamento");
					this.OncodAbbonamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataPagamento", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime dataPagamento
		{
			get
			{
				return this._dataPagamento;
			}
			set
			{
				if ((this._dataPagamento != value))
				{
					this.OndataPagamentoChanging(value);
					this.SendPropertyChanging();
					this._dataPagamento = value;
					this.SendPropertyChanged("dataPagamento");
					this.OndataPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_importo", DbType="Float NOT NULL")]
		public double importo
		{
			get
			{
				return this._importo;
			}
			set
			{
				if ((this._importo != value))
				{
					this.OnimportoChanging(value);
					this.SendPropertyChanging();
					this._importo = value;
					this.SendPropertyChanged("importo");
					this.OnimportoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABBONAMENTO_PAGAMENTO", Storage="_ABBONAMENTO", ThisKey="codAbbonamento", OtherKey="codAbbonamento", IsForeignKey=true)]
		public ABBONAMENTO ABBONAMENTO
		{
			get
			{
				return this._ABBONAMENTO.Entity;
			}
			set
			{
				ABBONAMENTO previousValue = this._ABBONAMENTO.Entity;
				if (((previousValue != value) 
							|| (this._ABBONAMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ABBONAMENTO.Entity = null;
						previousValue.PAGAMENTOs.Remove(this);
					}
					this._ABBONAMENTO.Entity = value;
					if ((value != null))
					{
						value.PAGAMENTOs.Add(this);
						this._codAbbonamento = value.codAbbonamento;
					}
					else
					{
						this._codAbbonamento = default(string);
					}
					this.SendPropertyChanged("ABBONAMENTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.partecipare_ep")]
	public partial class partecipare_ep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codArtista;
		
		private string _codEpisodio;
		
		private EntityRef<CAST> _CAST;
		
		private EntityRef<EPISODIO> _EPISODIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodArtistaChanging(string value);
    partial void OncodArtistaChanged();
    partial void OncodEpisodioChanging(string value);
    partial void OncodEpisodioChanged();
    #endregion
		
		public partecipare_ep()
		{
			this._CAST = default(EntityRef<CAST>);
			this._EPISODIO = default(EntityRef<EPISODIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codArtista", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codArtista
		{
			get
			{
				return this._codArtista;
			}
			set
			{
				if ((this._codArtista != value))
				{
					if (this._CAST.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodArtistaChanging(value);
					this.SendPropertyChanging();
					this._codArtista = value;
					this.SendPropertyChanged("codArtista");
					this.OncodArtistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codEpisodio", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codEpisodio
		{
			get
			{
				return this._codEpisodio;
			}
			set
			{
				if ((this._codEpisodio != value))
				{
					if (this._EPISODIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodEpisodioChanging(value);
					this.SendPropertyChanging();
					this._codEpisodio = value;
					this.SendPropertyChanged("codEpisodio");
					this.OncodEpisodioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAST_partecipare_ep", Storage="_CAST", ThisKey="codArtista", OtherKey="codArtista", IsForeignKey=true)]
		public CAST CAST
		{
			get
			{
				return this._CAST.Entity;
			}
			set
			{
				CAST previousValue = this._CAST.Entity;
				if (((previousValue != value) 
							|| (this._CAST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAST.Entity = null;
						previousValue.partecipare_eps.Remove(this);
					}
					this._CAST.Entity = value;
					if ((value != null))
					{
						value.partecipare_eps.Add(this);
						this._codArtista = value.codArtista;
					}
					else
					{
						this._codArtista = default(string);
					}
					this.SendPropertyChanged("CAST");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPISODIO_partecipare_ep", Storage="_EPISODIO", ThisKey="codEpisodio", OtherKey="codEpisodio", IsForeignKey=true)]
		public EPISODIO EPISODIO
		{
			get
			{
				return this._EPISODIO.Entity;
			}
			set
			{
				EPISODIO previousValue = this._EPISODIO.Entity;
				if (((previousValue != value) 
							|| (this._EPISODIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EPISODIO.Entity = null;
						previousValue.partecipare_eps.Remove(this);
					}
					this._EPISODIO.Entity = value;
					if ((value != null))
					{
						value.partecipare_eps.Add(this);
						this._codEpisodio = value.codEpisodio;
					}
					else
					{
						this._codEpisodio = default(string);
					}
					this.SendPropertyChanged("EPISODIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.partecipare_film")]
	public partial class partecipare_film : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codFilm;
		
		private string _codArtista;
		
		private EntityRef<CAST> _CAST;
		
		private EntityRef<FILM> _FILM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodFilmChanging(string value);
    partial void OncodFilmChanged();
    partial void OncodArtistaChanging(string value);
    partial void OncodArtistaChanged();
    #endregion
		
		public partecipare_film()
		{
			this._CAST = default(EntityRef<CAST>);
			this._FILM = default(EntityRef<FILM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codFilm", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codFilm
		{
			get
			{
				return this._codFilm;
			}
			set
			{
				if ((this._codFilm != value))
				{
					if (this._FILM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodFilmChanging(value);
					this.SendPropertyChanging();
					this._codFilm = value;
					this.SendPropertyChanged("codFilm");
					this.OncodFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codArtista", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codArtista
		{
			get
			{
				return this._codArtista;
			}
			set
			{
				if ((this._codArtista != value))
				{
					if (this._CAST.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodArtistaChanging(value);
					this.SendPropertyChanging();
					this._codArtista = value;
					this.SendPropertyChanged("codArtista");
					this.OncodArtistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAST_partecipare_film", Storage="_CAST", ThisKey="codArtista", OtherKey="codArtista", IsForeignKey=true)]
		public CAST CAST
		{
			get
			{
				return this._CAST.Entity;
			}
			set
			{
				CAST previousValue = this._CAST.Entity;
				if (((previousValue != value) 
							|| (this._CAST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAST.Entity = null;
						previousValue.partecipare_films.Remove(this);
					}
					this._CAST.Entity = value;
					if ((value != null))
					{
						value.partecipare_films.Add(this);
						this._codArtista = value.codArtista;
					}
					else
					{
						this._codArtista = default(string);
					}
					this.SendPropertyChanged("CAST");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FILM_partecipare_film", Storage="_FILM", ThisKey="codFilm", OtherKey="codFilm", IsForeignKey=true)]
		public FILM FILM
		{
			get
			{
				return this._FILM.Entity;
			}
			set
			{
				FILM previousValue = this._FILM.Entity;
				if (((previousValue != value) 
							|| (this._FILM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FILM.Entity = null;
						previousValue.partecipare_films.Remove(this);
					}
					this._FILM.Entity = value;
					if ((value != null))
					{
						value.partecipare_films.Add(this);
						this._codFilm = value.codFilm;
					}
					else
					{
						this._codFilm = default(string);
					}
					this.SendPropertyChanged("FILM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.produrre_ep")]
	public partial class produrre_ep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codCasaProduttrice;
		
		private string _codEpisodio;
		
		private EntityRef<CASA_PRODUTTRICE> _CASA_PRODUTTRICE;
		
		private EntityRef<EPISODIO> _EPISODIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodCasaProduttriceChanging(string value);
    partial void OncodCasaProduttriceChanged();
    partial void OncodEpisodioChanging(string value);
    partial void OncodEpisodioChanged();
    #endregion
		
		public produrre_ep()
		{
			this._CASA_PRODUTTRICE = default(EntityRef<CASA_PRODUTTRICE>);
			this._EPISODIO = default(EntityRef<EPISODIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codCasaProduttrice", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codCasaProduttrice
		{
			get
			{
				return this._codCasaProduttrice;
			}
			set
			{
				if ((this._codCasaProduttrice != value))
				{
					if (this._CASA_PRODUTTRICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodCasaProduttriceChanging(value);
					this.SendPropertyChanging();
					this._codCasaProduttrice = value;
					this.SendPropertyChanged("codCasaProduttrice");
					this.OncodCasaProduttriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codEpisodio", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codEpisodio
		{
			get
			{
				return this._codEpisodio;
			}
			set
			{
				if ((this._codEpisodio != value))
				{
					if (this._EPISODIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodEpisodioChanging(value);
					this.SendPropertyChanging();
					this._codEpisodio = value;
					this.SendPropertyChanged("codEpisodio");
					this.OncodEpisodioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASA_PRODUTTRICE_produrre_ep", Storage="_CASA_PRODUTTRICE", ThisKey="codCasaProduttrice", OtherKey="codCasaProduttrice", IsForeignKey=true)]
		public CASA_PRODUTTRICE CASA_PRODUTTRICE
		{
			get
			{
				return this._CASA_PRODUTTRICE.Entity;
			}
			set
			{
				CASA_PRODUTTRICE previousValue = this._CASA_PRODUTTRICE.Entity;
				if (((previousValue != value) 
							|| (this._CASA_PRODUTTRICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CASA_PRODUTTRICE.Entity = null;
						previousValue.produrre_eps.Remove(this);
					}
					this._CASA_PRODUTTRICE.Entity = value;
					if ((value != null))
					{
						value.produrre_eps.Add(this);
						this._codCasaProduttrice = value.codCasaProduttrice;
					}
					else
					{
						this._codCasaProduttrice = default(string);
					}
					this.SendPropertyChanged("CASA_PRODUTTRICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPISODIO_produrre_ep", Storage="_EPISODIO", ThisKey="codEpisodio", OtherKey="codEpisodio", IsForeignKey=true)]
		public EPISODIO EPISODIO
		{
			get
			{
				return this._EPISODIO.Entity;
			}
			set
			{
				EPISODIO previousValue = this._EPISODIO.Entity;
				if (((previousValue != value) 
							|| (this._EPISODIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EPISODIO.Entity = null;
						previousValue.produrre_eps.Remove(this);
					}
					this._EPISODIO.Entity = value;
					if ((value != null))
					{
						value.produrre_eps.Add(this);
						this._codEpisodio = value.codEpisodio;
					}
					else
					{
						this._codEpisodio = default(string);
					}
					this.SendPropertyChanged("EPISODIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.produrre_film")]
	public partial class produrre_film : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codCasaProduttrice;
		
		private string _codFilm;
		
		private EntityRef<CASA_PRODUTTRICE> _CASA_PRODUTTRICE;
		
		private EntityRef<FILM> _FILM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodCasaProduttriceChanging(string value);
    partial void OncodCasaProduttriceChanged();
    partial void OncodFilmChanging(string value);
    partial void OncodFilmChanged();
    #endregion
		
		public produrre_film()
		{
			this._CASA_PRODUTTRICE = default(EntityRef<CASA_PRODUTTRICE>);
			this._FILM = default(EntityRef<FILM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codCasaProduttrice", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codCasaProduttrice
		{
			get
			{
				return this._codCasaProduttrice;
			}
			set
			{
				if ((this._codCasaProduttrice != value))
				{
					if (this._CASA_PRODUTTRICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodCasaProduttriceChanging(value);
					this.SendPropertyChanging();
					this._codCasaProduttrice = value;
					this.SendPropertyChanged("codCasaProduttrice");
					this.OncodCasaProduttriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codFilm", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codFilm
		{
			get
			{
				return this._codFilm;
			}
			set
			{
				if ((this._codFilm != value))
				{
					if (this._FILM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodFilmChanging(value);
					this.SendPropertyChanging();
					this._codFilm = value;
					this.SendPropertyChanged("codFilm");
					this.OncodFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASA_PRODUTTRICE_produrre_film", Storage="_CASA_PRODUTTRICE", ThisKey="codCasaProduttrice", OtherKey="codCasaProduttrice", IsForeignKey=true)]
		public CASA_PRODUTTRICE CASA_PRODUTTRICE
		{
			get
			{
				return this._CASA_PRODUTTRICE.Entity;
			}
			set
			{
				CASA_PRODUTTRICE previousValue = this._CASA_PRODUTTRICE.Entity;
				if (((previousValue != value) 
							|| (this._CASA_PRODUTTRICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CASA_PRODUTTRICE.Entity = null;
						previousValue.produrre_films.Remove(this);
					}
					this._CASA_PRODUTTRICE.Entity = value;
					if ((value != null))
					{
						value.produrre_films.Add(this);
						this._codCasaProduttrice = value.codCasaProduttrice;
					}
					else
					{
						this._codCasaProduttrice = default(string);
					}
					this.SendPropertyChanged("CASA_PRODUTTRICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FILM_produrre_film", Storage="_FILM", ThisKey="codFilm", OtherKey="codFilm", IsForeignKey=true)]
		public FILM FILM
		{
			get
			{
				return this._FILM.Entity;
			}
			set
			{
				FILM previousValue = this._FILM.Entity;
				if (((previousValue != value) 
							|| (this._FILM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FILM.Entity = null;
						previousValue.produrre_films.Remove(this);
					}
					this._FILM.Entity = value;
					if ((value != null))
					{
						value.produrre_films.Add(this);
						this._codFilm = value.codFilm;
					}
					else
					{
						this._codFilm = default(string);
					}
					this.SendPropertyChanged("FILM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SERIE")]
	public partial class SERIE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codiceSerie;
		
		private string _titolo;
		
		private System.TimeSpan _durata;
		
		private EntitySet<STAGIONE> _STAGIONEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodiceSerieChanging(string value);
    partial void OncodiceSerieChanged();
    partial void OntitoloChanging(string value);
    partial void OntitoloChanged();
    partial void OndurataChanging(System.TimeSpan value);
    partial void OndurataChanged();
    #endregion
		
		public SERIE()
		{
			this._STAGIONEs = new EntitySet<STAGIONE>(new Action<STAGIONE>(this.attach_STAGIONEs), new Action<STAGIONE>(this.detach_STAGIONEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codiceSerie", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codiceSerie
		{
			get
			{
				return this._codiceSerie;
			}
			set
			{
				if ((this._codiceSerie != value))
				{
					this.OncodiceSerieChanging(value);
					this.SendPropertyChanging();
					this._codiceSerie = value;
					this.SendPropertyChanged("codiceSerie");
					this.OncodiceSerieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titolo", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string titolo
		{
			get
			{
				return this._titolo;
			}
			set
			{
				if ((this._titolo != value))
				{
					this.OntitoloChanging(value);
					this.SendPropertyChanging();
					this._titolo = value;
					this.SendPropertyChanged("titolo");
					this.OntitoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_durata", DbType="Time NOT NULL")]
		public System.TimeSpan durata
		{
			get
			{
				return this._durata;
			}
			set
			{
				if ((this._durata != value))
				{
					this.OndurataChanging(value);
					this.SendPropertyChanging();
					this._durata = value;
					this.SendPropertyChanged("durata");
					this.OndurataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERIE_STAGIONE", Storage="_STAGIONEs", ThisKey="codiceSerie", OtherKey="codiceSerie")]
		public EntitySet<STAGIONE> STAGIONEs
		{
			get
			{
				return this._STAGIONEs;
			}
			set
			{
				this._STAGIONEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STAGIONEs(STAGIONE entity)
		{
			this.SendPropertyChanging();
			entity.SERIE = this;
		}
		
		private void detach_STAGIONEs(STAGIONE entity)
		{
			this.SendPropertyChanging();
			entity.SERIE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STAGIONE")]
	public partial class STAGIONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codiceSerie;
		
		private int _numeroStagione;
		
		private EntitySet<EPISODIO> _EPISODIOs;
		
		private EntityRef<SERIE> _SERIE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodiceSerieChanging(string value);
    partial void OncodiceSerieChanged();
    partial void OnnumeroStagioneChanging(int value);
    partial void OnnumeroStagioneChanged();
    #endregion
		
		public STAGIONE()
		{
			this._EPISODIOs = new EntitySet<EPISODIO>(new Action<EPISODIO>(this.attach_EPISODIOs), new Action<EPISODIO>(this.detach_EPISODIOs));
			this._SERIE = default(EntityRef<SERIE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codiceSerie", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codiceSerie
		{
			get
			{
				return this._codiceSerie;
			}
			set
			{
				if ((this._codiceSerie != value))
				{
					if (this._SERIE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodiceSerieChanging(value);
					this.SendPropertyChanging();
					this._codiceSerie = value;
					this.SendPropertyChanged("codiceSerie");
					this.OncodiceSerieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numeroStagione", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int numeroStagione
		{
			get
			{
				return this._numeroStagione;
			}
			set
			{
				if ((this._numeroStagione != value))
				{
					this.OnnumeroStagioneChanging(value);
					this.SendPropertyChanging();
					this._numeroStagione = value;
					this.SendPropertyChanged("numeroStagione");
					this.OnnumeroStagioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STAGIONE_EPISODIO", Storage="_EPISODIOs", ThisKey="codiceSerie,numeroStagione", OtherKey="codiceSerie,numeroStagione")]
		public EntitySet<EPISODIO> EPISODIOs
		{
			get
			{
				return this._EPISODIOs;
			}
			set
			{
				this._EPISODIOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERIE_STAGIONE", Storage="_SERIE", ThisKey="codiceSerie", OtherKey="codiceSerie", IsForeignKey=true)]
		public SERIE SERIE
		{
			get
			{
				return this._SERIE.Entity;
			}
			set
			{
				SERIE previousValue = this._SERIE.Entity;
				if (((previousValue != value) 
							|| (this._SERIE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SERIE.Entity = null;
						previousValue.STAGIONEs.Remove(this);
					}
					this._SERIE.Entity = value;
					if ((value != null))
					{
						value.STAGIONEs.Add(this);
						this._codiceSerie = value.codiceSerie;
					}
					else
					{
						this._codiceSerie = default(string);
					}
					this.SendPropertyChanged("SERIE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EPISODIOs(EPISODIO entity)
		{
			this.SendPropertyChanging();
			entity.STAGIONE = this;
		}
		
		private void detach_EPISODIOs(EPISODIO entity)
		{
			this.SendPropertyChanging();
			entity.STAGIONE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TITOLARE_ACCOUNT")]
	public partial class TITOLARE_ACCOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CF;
		
		private string _nomeAccount;
		
		private string _indirizzo;
		
		private string _città;
		
		private string _numCartaDiCredito;
		
		private EntitySet<ABBONAMENTO> _ABBONAMENTOs;
		
		private EntityRef<ACCOUNT> _ACCOUNT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    partial void OnnomeAccountChanging(string value);
    partial void OnnomeAccountChanged();
    partial void OnindirizzoChanging(string value);
    partial void OnindirizzoChanged();
    partial void OncittàChanging(string value);
    partial void OncittàChanged();
    partial void OnnumCartaDiCreditoChanging(string value);
    partial void OnnumCartaDiCreditoChanged();
    #endregion
		
		public TITOLARE_ACCOUNT()
		{
			this._ABBONAMENTOs = new EntitySet<ABBONAMENTO>(new Action<ABBONAMENTO>(this.attach_ABBONAMENTOs), new Action<ABBONAMENTO>(this.detach_ABBONAMENTOs));
			this._ACCOUNT = default(EntityRef<ACCOUNT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeAccount", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string nomeAccount
		{
			get
			{
				return this._nomeAccount;
			}
			set
			{
				if ((this._nomeAccount != value))
				{
					if (this._ACCOUNT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnomeAccountChanging(value);
					this.SendPropertyChanging();
					this._nomeAccount = value;
					this.SendPropertyChanged("nomeAccount");
					this.OnnomeAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indirizzo", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string indirizzo
		{
			get
			{
				return this._indirizzo;
			}
			set
			{
				if ((this._indirizzo != value))
				{
					this.OnindirizzoChanging(value);
					this.SendPropertyChanging();
					this._indirizzo = value;
					this.SendPropertyChanged("indirizzo");
					this.OnindirizzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_città", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string città
		{
			get
			{
				return this._città;
			}
			set
			{
				if ((this._città != value))
				{
					this.OncittàChanging(value);
					this.SendPropertyChanging();
					this._città = value;
					this.SendPropertyChanged("città");
					this.OncittàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numCartaDiCredito", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string numCartaDiCredito
		{
			get
			{
				return this._numCartaDiCredito;
			}
			set
			{
				if ((this._numCartaDiCredito != value))
				{
					this.OnnumCartaDiCreditoChanging(value);
					this.SendPropertyChanging();
					this._numCartaDiCredito = value;
					this.SendPropertyChanged("numCartaDiCredito");
					this.OnnumCartaDiCreditoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TITOLARE_ACCOUNT_ABBONAMENTO", Storage="_ABBONAMENTOs", ThisKey="CF", OtherKey="CF")]
		public EntitySet<ABBONAMENTO> ABBONAMENTOs
		{
			get
			{
				return this._ABBONAMENTOs;
			}
			set
			{
				this._ABBONAMENTOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_TITOLARE_ACCOUNT", Storage="_ACCOUNT", ThisKey="nomeAccount", OtherKey="nomeAccount", IsForeignKey=true)]
		public ACCOUNT ACCOUNT
		{
			get
			{
				return this._ACCOUNT.Entity;
			}
			set
			{
				ACCOUNT previousValue = this._ACCOUNT.Entity;
				if (((previousValue != value) 
							|| (this._ACCOUNT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACCOUNT.Entity = null;
						previousValue.TITOLARE_ACCOUNTs.Remove(this);
					}
					this._ACCOUNT.Entity = value;
					if ((value != null))
					{
						value.TITOLARE_ACCOUNTs.Add(this);
						this._nomeAccount = value.nomeAccount;
					}
					else
					{
						this._nomeAccount = default(string);
					}
					this.SendPropertyChanged("ACCOUNT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABBONAMENTOs(ABBONAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.TITOLARE_ACCOUNT = this;
		}
		
		private void detach_ABBONAMENTOs(ABBONAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.TITOLARE_ACCOUNT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UTENTE")]
	public partial class UTENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nomeAccount;
		
		private string _nomeUtente;
		
		private EntitySet<VISIONE> _VISIONEs;
		
		private EntityRef<ACCOUNT> _ACCOUNT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnomeAccountChanging(string value);
    partial void OnnomeAccountChanged();
    partial void OnnomeUtenteChanging(string value);
    partial void OnnomeUtenteChanged();
    #endregion
		
		public UTENTE()
		{
			this._VISIONEs = new EntitySet<VISIONE>(new Action<VISIONE>(this.attach_VISIONEs), new Action<VISIONE>(this.detach_VISIONEs));
			this._ACCOUNT = default(EntityRef<ACCOUNT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeAccount", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nomeAccount
		{
			get
			{
				return this._nomeAccount;
			}
			set
			{
				if ((this._nomeAccount != value))
				{
					if (this._ACCOUNT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnomeAccountChanging(value);
					this.SendPropertyChanging();
					this._nomeAccount = value;
					this.SendPropertyChanged("nomeAccount");
					this.OnnomeAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeUtente", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nomeUtente
		{
			get
			{
				return this._nomeUtente;
			}
			set
			{
				if ((this._nomeUtente != value))
				{
					this.OnnomeUtenteChanging(value);
					this.SendPropertyChanging();
					this._nomeUtente = value;
					this.SendPropertyChanged("nomeUtente");
					this.OnnomeUtenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UTENTE_VISIONE", Storage="_VISIONEs", ThisKey="nomeAccount,nomeUtente", OtherKey="nomeAccount,nomeUtente")]
		public EntitySet<VISIONE> VISIONEs
		{
			get
			{
				return this._VISIONEs;
			}
			set
			{
				this._VISIONEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_UTENTE", Storage="_ACCOUNT", ThisKey="nomeAccount", OtherKey="nomeAccount", IsForeignKey=true)]
		public ACCOUNT ACCOUNT
		{
			get
			{
				return this._ACCOUNT.Entity;
			}
			set
			{
				ACCOUNT previousValue = this._ACCOUNT.Entity;
				if (((previousValue != value) 
							|| (this._ACCOUNT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACCOUNT.Entity = null;
						previousValue.UTENTEs.Remove(this);
					}
					this._ACCOUNT.Entity = value;
					if ((value != null))
					{
						value.UTENTEs.Add(this);
						this._nomeAccount = value.nomeAccount;
					}
					else
					{
						this._nomeAccount = default(string);
					}
					this.SendPropertyChanged("ACCOUNT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VISIONEs(VISIONE entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE = this;
		}
		
		private void detach_VISIONEs(VISIONE entity)
		{
			this.SendPropertyChanging();
			entity.UTENTE = null;
		}
	}
}
#pragma warning restore 1591
